{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/Songrating-Freddy.Max/songratingfront/frontend/src/src/components/statsModal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, NavItem } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      const activeItem = {\n        ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n    this.findBestRatedSong = () => {\n      console.log(this.state);\n      var best_song = null;\n      var best_artist = null;\n      var best_rating = -1;\n      this.state.activeItem.songsList.forEach(song => {\n        if (song.rating_average && song.rating_average > best_rating) {\n          best_song = song.song;\n          best_artist = song.artist;\n          best_rating = song.rating_average;\n        }\n      });\n      // console.log(best_song,best_rating)\n      return [best_song, best_artist];\n    };\n    this.userRatingsCount = () => {\n      return this.state.activeItem.ratingsList.length;\n    };\n    this.songCount = () => {\n      return this.state.activeItem.songsList.length;\n    };\n    this.popularGenre = () => {\n      var genres = {};\n      this.state.activeItem.songsList.forEach(song => {\n        if (song.genre in genres) {\n          genres[song.genre].push(song.rating_average);\n        } else {\n          genres[song.genre] = [song.rating_average];\n        }\n      });\n      //   console.log('g', genres)\n\n      var best_genre = null;\n      var best_rating = -1;\n      for (let g in genres) {\n        let sum = genres[g].reduce((a, b) => a + b);\n        let len = genres[g].length;\n        if (best_rating < sum / len) {\n          best_genre = g;\n          best_rating = sum / len;\n        }\n      }\n      return [best_genre];\n    };\n    this.renderItems = () => {\n      let [best_song, best_artist] = this.findBestRatedSong();\n      let ratings_count = this.userRatingsCount();\n      let songs_count = this.songCount();\n      let [best_genre] = this.popularGenre();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"username: \", this.state.activeItem.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"TOP RATED SONG: \", best_song, \" by \", best_artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"NUMBER OF SONGS: \", songs_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"TOP RATED GENRE: \", best_genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"YOUR RATING COUNT: \", ratings_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this);\n    };\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n  render() {\n    const {\n      toggle\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      animation: 'false',\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"STATISTICS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          children: [\" \", this.renderItems(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: () => toggle(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Label","NavItem","jsxDEV","_jsxDEV","CustomModal","constructor","props","handleChange","e","name","value","target","activeItem","state","setState","findBestRatedSong","console","log","best_song","best_artist","best_rating","songsList","forEach","song","rating_average","artist","userRatingsCount","ratingsList","length","songCount","popularGenre","genres","genre","push","best_genre","g","sum","reduce","a","b","len","renderItems","ratings_count","songs_count","children","username","fileName","_jsxFileName","lineNumber","columnNumber","render","toggle","isOpen","animation","color","onClick"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/Songrating-Freddy.Max/songratingfront/frontend/src/src/components/statsModal.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  NavItem,\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: this.props.activeItem,\n    };\n  }\n\n\n  handleChange = (e) => {\n    let { name, value } = e.target;\n    const activeItem = { ...this.state.activeItem, [name]: value };\n  \n    this.setState({ activeItem });\n  };\n\n  findBestRatedSong = () => {\n    console.log(this.state)\n    var best_song = null\n    var best_artist = null\n    var best_rating = -1\n    this.state.activeItem.songsList.forEach((song) => {\n        if (song.rating_average && song.rating_average > best_rating) {\n            best_song = song.song\n            best_artist = song.artist\n            best_rating = song.rating_average\n        }\n    })\n    // console.log(best_song,best_rating)\n    return [best_song, best_artist]\n  }\n\n  userRatingsCount = () => {\n      return this.state.activeItem.ratingsList.length\n  }\n\n  songCount = () => {\n      return this.state.activeItem.songsList.length\n  }\n\n  popularGenre = () => {\n      var genres = {}\n      this.state.activeItem.songsList.forEach((song) => {\n        if (song.genre in genres){\n            genres[song.genre].push(song.rating_average)\n        } else {\n            genres[song.genre] = [song.rating_average]\n        }\n      })\n    //   console.log('g', genres)\n\n      var best_genre = null\n      var best_rating = -1\n      for (let g in genres) {\n          let sum = genres[g].reduce((a, b) => a + b)\n          let len = genres[g].length\n          if (best_rating < sum/len){\n              best_genre = g\n              best_rating = sum/len\n          }\n      }\n      return [best_genre]\n  }\n\n\n  renderItems = () => {\n      let [best_song, best_artist] = this.findBestRatedSong()\n      let ratings_count = this.userRatingsCount()\n      let songs_count = this.songCount()\n      let [best_genre] = this.popularGenre()\n\n      return (\n          <div>\n            <div>\n                    username: {this.state.activeItem.username}\n            </div>\n            <div>\n                    TOP RATED SONG: {best_song} by {best_artist}\n            </div>\n\n            <div>\n                    NUMBER OF SONGS: {songs_count}\n            </div>\n            <div>\n                    TOP RATED GENRE: {best_genre}\n            </div>\n            <div>\n                    YOUR RATING COUNT: {ratings_count}\n            </div>\n\n          </div>\n      );\n  }\n\n  render() {\n    const { toggle } = this.props;\n    return (\n      <Modal isOpen={true} toggle={toggle} animation={'false'}>\n        <ModalHeader toggle={toggle}>STATISTICS</ModalHeader>\n        <ModalBody>\n          <Label> {this.renderItems()} </Label>\n          \n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"success\"\n            onClick={() => toggle()}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}